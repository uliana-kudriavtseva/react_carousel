{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","api/images.ts","App.tsx","index.tsx"],"names":["Carousel","images","visabilityParams","useState","position","setPosition","step","frameSize","itemWidth","animationDuration","infinite","className","style","width","map","id","url","transform","transition","src","alt","type","onClick","hiddenImagesSize","length","Math","min","disabled","max","Form","handleChangeValue","htmlFor","name","value","onChange","App","setVisabilityParams","event","target","checked","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4ae16523.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { Image } from '../../types/Images';\nimport { Params } from '../../types/Params';\nimport './Carousel.scss';\n\ninterface Props {\n  images: Image[],\n  visabilityParams: Params,\n}\n\nexport const Carousel: React.FC<Props> = ({ images, visabilityParams }) => {\n  const [position, setPosition] = useState(0);\n  const {\n    step, frameSize, itemWidth, animationDuration, infinite,\n  } = visabilityParams;\n\n  const handlePrevClick = () => {\n    const hiddenImagesSize = (images.length - frameSize) * itemWidth;\n\n    setPosition(Math.min(position + itemWidth * step, 0));\n\n    if (position === 0 && infinite) {\n      setPosition(-hiddenImagesSize);\n    }\n  };\n\n  const handleNextClick = () => {\n    const hiddenImagesSize = (images.length - frameSize) * itemWidth;\n\n    setPosition(Math.max(position - itemWidth * step, -hiddenImagesSize));\n\n    if (position === -hiddenImagesSize && infinite) {\n      setPosition(0);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: `${frameSize * itemWidth}px` }}\n      >\n        {images.map(({ id, url }) => (\n          <li\n            className=\"Carousel__item\"\n            key={id}\n            style={{\n              transform: `translateX(${position}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={url}\n              alt={`${id}`}\n              style={{ width: `${itemWidth}px` }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handlePrevClick}\n          disabled={position === 0 && !infinite}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          data-cy=\"next\"\n          onClick={handleNextClick}\n          disabled={\n            position === -(images.length - frameSize) * itemWidth && !infinite\n          }\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Params } from '../../types/Params';\nimport './Form.scss';\n\ninterface Props {\n  max: number,\n  visabilityParams: Params,\n  handleChangeValue: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const Form: React.FC<Props> = ({\n  visabilityParams,\n  max,\n  handleChangeValue,\n}) => {\n  const {\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n  } = visabilityParams;\n\n  return (\n    <form className=\"form\">\n      <label\n        htmlFor=\"itemId\"\n        className=\"form__label\"\n      >\n        Item Width:\n        <input\n          className=\"form__input\"\n          name=\"itemWidth\"\n          id=\"itemId\"\n          type=\"number\"\n          min={30}\n          step={10}\n          max={300}\n          value={itemWidth}\n          onChange={handleChangeValue}\n        />\n      </label>\n\n      <label\n        htmlFor=\"frameId\"\n        className=\"form__label\"\n      >\n        Frame Size:\n        <input\n          className=\"form__input\"\n          name=\"frameSize\"\n          id=\"frameId\"\n          type=\"number\"\n          min={1}\n          step={1}\n          max={max}\n          value={frameSize}\n          onChange={handleChangeValue}\n        />\n      </label>\n\n      <label\n        htmlFor=\"stepId\"\n        className=\"form__label\"\n      >\n        Step:\n        <input\n          className=\"form__input\"\n          name=\"step\"\n          id=\"stepId\"\n          type=\"number\"\n          min={1}\n          step={1}\n          max={max}\n          value={step}\n          onChange={handleChangeValue}\n        />\n      </label>\n\n      <label\n        htmlFor=\"animationId\"\n        className=\"form__label\"\n      >\n        Animation duration:\n        <input\n          className=\"form__input\"\n          name=\"animationDuration\"\n          id=\"animationId\"\n          type=\"number\"\n          min={100}\n          step={100}\n          max={5000}\n          value={animationDuration}\n          onChange={handleChangeValue}\n        />\n      </label>\n\n      <label className=\"form__label\">\n        Infinite:\n        <input\n          className=\"form__input\"\n          name=\"infinite\"\n          id=\"infinite\"\n          type=\"checkbox\"\n          onChange={handleChangeValue}\n        />\n      </label>\n    </form>\n  );\n};\n","import { Image } from '../types/Images';\n\nexport const images: Image [] = [\n  { id: 1, url: './img/1.png' },\n  { id: 2, url: './img/3.png' },\n  { id: 3, url: './img/2.png' },\n  { id: 4, url: './img/4.png' },\n  { id: 5, url: './img/5.png' },\n  { id: 6, url: './img/6.png' },\n  { id: 7, url: './img/7.png' },\n  { id: 8, url: './img/8.png' },\n  { id: 9, url: './img/9.png' },\n  { id: 10, url: './img/10.png' },\n];\n","import { useState } from 'react';\nimport { Carousel } from './components/Carousel/Carousel';\nimport { Form } from './components/Form/Form';\nimport { Params } from './types/Params';\nimport { images } from './api/images';\nimport './App.scss';\n\nconst App: React.FC = () => {\n  const [visabilityParams, setVisabilityParams] = useState<Params>({\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  });\n\n  const handleChangeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      name, type, value, checked,\n    } = event.target;\n\n    setVisabilityParams(prevState => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : +value,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">\n        Carousel with\n        {' '}\n        {images.length}\n        {' '}\n        images\n      </h1>\n\n      <Carousel\n        images={images}\n        visabilityParams={visabilityParams}\n      />\n\n      <Form\n        visabilityParams={visabilityParams}\n        max={images.length}\n        handleChangeValue={handleChangeValue}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}